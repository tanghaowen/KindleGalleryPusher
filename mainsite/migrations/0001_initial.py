# Generated by Django 2.1.7 on 2019-03-09 10:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='作者名')),
            ],
            options={
                'verbose_name': '作者',
                'verbose_name_plural': '作者',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='书名')),
                ('title_chinese', models.CharField(blank=True, max_length=255, verbose_name='中文名')),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('cover_id', models.IntegerField(default=-1, verbose_name='使用哪张图')),
                ('bangumi_site_path', models.IntegerField(default=0, verbose_name='Bangumi网站id')),
                ('mediaarts_site_path', models.IntegerField(default=0, verbose_name='メディア芸術データベース网站id')),
                ('sakuhindb_path', models.TextField(default=0, verbose_name='sakuhindb网站路径')),
                ('desc', models.TextField(blank=True, verbose_name='描述')),
                ('show', models.BooleanField(default=True)),
                ('author', models.ManyToManyField(blank=True, to='mainsite.Author')),
            ],
            options={
                'verbose_name': '书籍',
                'verbose_name_plural': '书籍',
            },
        ),
        migrations.CreateModel(
            name='EbookConvertOver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epub_ok', models.BooleanField(default=False, verbose_name='epub转换完成')),
                ('mobi_ok', models.BooleanField(default=False, verbose_name='mobi转换完成')),
                ('mobi_push_ok', models.BooleanField(default=False, verbose_name='mobi推送版转换完成')),
                ('status', models.CharField(default='pending', max_length=100, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='EbookConvertQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epub_ok', models.BooleanField(default=False, verbose_name='epub转换完成')),
                ('mobi_ok', models.BooleanField(default=False, verbose_name='mobi转换完成')),
                ('mobi_push_ok', models.BooleanField(default=False, verbose_name='mobi推送版转换完成')),
                ('status', models.CharField(default='pending', max_length=100, verbose_name='状态')),
            ],
            options={
                'verbose_name': '格式待转换队列',
                'verbose_name_plural': '格式待转换队列',
            },
        ),
        migrations.CreateModel(
            name='HomePageGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('books', models.ManyToManyField(to='mainsite.Book')),
            ],
            options={
                'verbose_name': '首页分组',
                'verbose_name_plural': '首页分组',
            },
        ),
        migrations.CreateModel(
            name='ImageWithThumb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='上传时间')),
                ('image', models.ImageField(blank=True, upload_to='img')),
                ('thumb_image', models.ImageField(blank=True, upload_to='img')),
                ('normal_image', models.ImageField(blank=True, upload_to='img')),
                ('type', models.CharField(default='image', max_length=20)),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_file', models.FileField(upload_to='books', verbose_name='zip文件')),
                ('epub_file', models.FileField(blank=True, null=True, upload_to='', verbose_name='epub文件')),
                ('mobi_file', models.FileField(blank=True, null=True, upload_to='', verbose_name='mobi文件')),
                ('mobi_push_file', models.FileField(blank=True, null=True, upload_to='', verbose_name='mobi推送文件')),
                ('name', models.CharField(max_length=255, verbose_name='显示名')),
                ('volume_number', models.CharField(max_length=255, verbose_name='第几卷')),
                ('show', models.BooleanField(default=False, verbose_name='显示')),
                ('index', models.IntegerField(default=0, verbose_name='顺序')),
                ('need_convert', models.BooleanField(default=True, verbose_name='是否需要转换')),
                ('uploaded_data', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='此卷的zip上传时间')),
                ('edited_data', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='此卷被编辑过的时间（格式转换后也算编辑）')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainsite.Book', verbose_name='关联书籍')),
            ],
            options={
                'verbose_name': '书籍',
                'verbose_name_plural': '卷信息',
            },
        ),
        migrations.CreateModel(
            name='VolumeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='volume',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainsite.VolumeType', verbose_name='卷类型'),
        ),
        migrations.AddField(
            model_name='ebookconvertqueue',
            name='volume',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainsite.Volume', verbose_name='待转换书籍'),
        ),
        migrations.AddField(
            model_name='ebookconvertover',
            name='volume',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainsite.Volume', verbose_name='待转换书籍'),
        ),
        migrations.AddField(
            model_name='book',
            name='cover_used',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cover_used', to='mainsite.ImageWithThumb'),
        ),
        migrations.AddField(
            model_name='book',
            name='covers',
            field=models.ManyToManyField(blank=True, to='mainsite.ImageWithThumb', verbose_name='封面图'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(blank=True, to='mainsite.Tag'),
        ),
    ]
